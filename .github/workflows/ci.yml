name: ci

on:
  push:
    branches: [ "main" ]

env:
  APP_NAME: hello-argocd-and-github-actions
  IMAGE_REPO: docker.io/wellrcosta/hello-argocd-and-github-actions
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (app)
        uses: actions/checkout@v4

      - name: Docker login (Docker Hub)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_REPO }}:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Checkout (env-infra)
        uses: actions/checkout@v4
        with:
          repository: wellrcosta/env-infra
          token: ${{ secrets.ENV_INFRA_PAT }}   # PAT com write no env-infra
          path: env-infra

      - name: Update values.yaml in env-infra
        run: |
          set -e
          APP_DIR="env-infra/apps/${APP_NAME}"
          mkdir -p "${APP_DIR}"
          
          cat > "${APP_DIR}/values.yaml" << 'EOF'
          image:
            repository: ${{ env.IMAGE_REPO }}
            tag: "${{ env.IMAGE_TAG }}"
            pullPolicy: IfNotPresent
          
          replicaCount: 1
          
          containerPort: 80
          probes:
            enabled: true
            path: /health
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          
          service:
            port: 80
          
          ingress:
            enabled: true
            className: traefik
          
          extraEnv:
            - name: PORT
              value: "80"
          
          secret:
            enabled: false
            name: ""
            data: {}
          
          cronjobs:
            enabled: false
            items: []
          
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          EOF

      - name: Commit & push (env-infra)
        run: |
          set -e
          cd env-infra
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add "apps/${APP_NAME}/values.yaml"
          git commit -m "ci: set ${APP_NAME} image tag -> ${IMAGE_TAG}" || echo "no changes"
          git push